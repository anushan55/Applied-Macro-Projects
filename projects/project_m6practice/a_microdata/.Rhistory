# # }
# #run function
# x <- 385
# result <- DEMOFUNCTION(x)
# read-in + basic editing of raw data: create base df ####
input <- 'm6practice_databasics_ex1.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
# INTRO	script-specific ####
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME_check)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
# Import dataset
setwd(A)
df <- read_dta("Labour_Force_SA_SALDRU_1993.dta")
#create original row id
df$ADMIN_ID <- seq.int(nrow(df))
#save as.rda
SAVE(dfx=df)
#############################################+
# read-in + basic editing of raw data: create base df ####
input <- 'm6practice_databasics_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME_check)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
df<-LOAD(dfinput=paste0(DFBASE,"_ex3"))
#check label
describe(df$wphy)
View(df)
describe(df$wphy)
View(df)
# read-in + basic editing of raw data: create base df ####
input <- 'm6practice_databasics_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
# # variable grouping, selection, creation ####
input <- "m6practice_varcreation_outcomes_ex1.R"
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#############################################+
# # variable grouping, selection, creation ####
input <- "m6practice_varcreation_outcomes_ex3.R"
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
View(df)
input <- 'm6practice_varcreation_treatments_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
input <- 'm6practice_varcreation_merge_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
View(df1)
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME_check)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
df1 <- LOAD(dfinput="m6practice_varcreation_outcomes_ex3")
df2 <- LOAD(dfinput="m6practice_varcreation_treatments_ex3")
# TARGET:
# INDATA:
# OUTDATA/ OUTPUT:
################################################################################################################+
# INTRO	script-specific ####
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME_check)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
df<-LOAD(dfinput=paste0(DFBASE,"_ex3"))
#rename
colnames(df) <- sub("urateb","UNEMRATE",colnames(df))
#restrict
df <- df[,c("ADMIN_ID","UNEMRATE")]
SAVE(dfx=df)
#############################################+
# # variable grouping, selection, creation ####
input <- "m6practice_varcreation_outcomes_ex3.R"
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
input <- 'm6practice_varcreation_treatments_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#############################################+
# # variable grouping, selection, creation ####
input <- "m6practice_varcreation_outcomes_ex3.R"
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#############################################+
# # variable grouping, selection, creation ####
input <- "m6practice_varcreation_outcomes_ex3.R"
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
input <- 'm6practice_varcreation_treatments_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
# input <- 'm6practice_varcreation_controls_ex1.R'
# source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#...
input <- 'm6practice_varcreation_merge_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#############################################+
# # variable grouping, selection, creation ####
input <- "m6practice_varcreation_outcomes_ex3.R"
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#############################################+
# # variable grouping, selection, creation ####
input <- "m6practice_varcreation_outcomes_ex3.R"
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
input <- 'm6practice_varcreation_treatments_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
# input <- 'm6practice_varcreation_controls_ex1.R'
# source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#...
input <- 'm6practice_varcreation_merge_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#############################################+
# # variable grouping, selection, creation ####
input <- "m6practice_varcreation_outcomes_ex3.R"
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
input <- 'm6practice_varcreation_treatments_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#############################################+
# # variable grouping, selection, creation ####
input <- "m6practice_varcreation_outcomes_ex3.R"
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
input <- 'm6practice_varcreation_treatments_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
# input <- 'm6practice_varcreation_controls_ex1.R'
# source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#...
input <- 'm6practice_varcreation_merge_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
##############################################################################################################+
# INTRO ####
#clear console
cat("\014")
#clear all globals in memory
rm(list = ls()) #needs to go before user-written functions (not libraries) are loaded
sink()
######################+
# non-automatable globals #####
#for master scriptname and extension #####
library(rstudioapi)
MAINNAME <- rstudioapi::getActiveDocumentContext()$path #returns path+name
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
HOME <- "E:/Documents/Applied Macro/Projects/projects/" #here: path to 'projects' dir
DO <- paste0(HOME,"/project_m6practice/c_program/") #here: path to folder with R.code
######################+
# launch set-up scripts #####
input <- '00_execute_m6practice_intro_aux.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#DEBUG <- T
# TARGET: create toy examples of user-written functions
#define function
#NOTE: definitions live in global envir once they have been run from 00_PROGRAMS.R
#upon defining(!) ordering does not matter, i.e., DEMOFUNCTION can be included into other function definitions before DEMOFUNCTION is defined itself
#upon running(!) a function all its inputs have to live in the global envir already
DEMOFUNCTION <- function(x){
result <- x * 10
print(result)
return(result)
}
# #MWE:
# # generic set-up of functions:
# # myfunction <- function(arg1, arg2, ... ){
# # statements
# # return(object)
# # }
# #run function
# x <- 385
# result <- DEMOFUNCTION(x)
# TARGET: dynamically save to disc  ####
SAVE <- function(dfx,namex=MAINNAME,pattdir=TEMP,pattdata='.rda'
#,dfxdepend="makesurenomatch"
) {
#set dir
setwd(paste0(pattdir))
#assign name
assign(paste0(namex), dfx)
#attach extension
dfname <- paste0(namex,pattdata)
#save
save(list=paste0(namex), file = dfname)
# #delete downstream df s.t. it will be updated
# if(RESETDF==F){
#   if(exists("DFDEPEND")){
#     if(!grepl(DFDEPEND,MAINNAME)){
#       #print('here')
#       dfxdepend <- DFDEPEND
#       #print(dfxdepend)
#     }
#   }
#   junk <- dir(path=A, pattern=dfxdepend)
#   #print(junk)
#   file.remove(junk)
#   junk <- dir(path=TEMP, pattern=dfxdepend)
#   #print(junk)
#   file.remove(junk)
# }
}
#MWE: SAVE(dftest)
# TARGET: load (or rename) df
LOAD <- function(dfinput, dfextension='.rda', pattdir=TEMP) {
#######################
#load main file (if not in global envir already)
setwd(pattdir)
if(class(dfinput)=='character'){
load(file=paste0(dfinput,dfextension), .GlobalEnv)
dfx <- as.data.frame(mget(ls(pattern = paste0(dfinput,'$'), envir = .GlobalEnv), envir = .GlobalEnv))
colnames(dfx) <- sub(paste0(dfinput,"."), "", colnames(dfx))
}
if(class(dfinput)=='data.frame'){
dfx <- dfinput
}
rm(list=dfinput, envir = .GlobalEnv)
gc()
return(dfx)
}
# MWE:
# df <- LOAD("m6practice_databasics_ex1")
#############################################+
# read-in + basic editing of raw data: create base df ####
input <- 'm6practice_databasics_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#############################################+
# # variable grouping, selection, creation ####
#input <- "m6practice_varcreation_outcomes_ex3.R"
#source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#input <- 'm6practice_varcreation_treatments_ex3.R'
#source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
# input <- 'm6practice_varcreation_controls_ex1.R'
# source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#...
#input <- 'm6practice_varcreation_merge_ex3.R'
#source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#############################################+
# main & subsample creation ####
input <- 'm6practice_samplecreation_main_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
#############################################+
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
#############################################+
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
input <- paste0(ADO,"/SAVE")
#clear console
cat("\014")
#clear all globals in memory
rm(list = ls()) #needs to go before user-written functions (not libraries) are loaded
sink()
######################+
# non-automatable globals #####
#for master scriptname and extension #####
library(rstudioapi)
MAINNAME <- rstudioapi::getActiveDocumentContext()$path #returns path+name
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
HOME <- "E:/Documents/Applied Macro/Projects/projects/" #here: path to 'projects' dir
DO <- paste0(HOME,"/project_m6practice/c_program/") #here: path to folder with R.code
######################+
# launch set-up scripts #####
input <- '00_execute_m6practice_intro_aux.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#DEBUG <- T
################################################################################################################+
# INTRO ####
#clear console
cat("\014")
#clear all globals in memory
rm(list = ls()) #needs to go before user-written functions (not libraries) are loaded
sink()
######################+
# non-automatable globals #####
#for master scriptname and extension #####
library(rstudioapi)
MAINNAME <- rstudioapi::getActiveDocumentContext()$path #returns path+name
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
HOME <- "E:/Documents/Applied Macro/Projects/projects/" #here: path to 'projects' dir
DO <- paste0(HOME,"/project_m6practice/c_program/") #here: path to folder with R.code
######################+
# launch set-up scripts #####
input <- '00_execute_m6practice_intro_aux.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
################################################################################################################+
# INTRO ####
#clear console
cat("\014")
#clear all globals in memory
rm(list = ls()) #needs to go before user-written functions (not libraries) are loaded
sink()
######################+
# non-automatable globals #####
#for master scriptname and extension #####
library(rstudioapi)
MAINNAME <- rstudioapi::getActiveDocumentContext()$path #returns path+name
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
HOME <- "E:/Documents/Applied Macro/Projects/projects/" #here: path to 'projects' dir
DO <- paste0(HOME,"/project_m6practice/c_program/") #here: path to folder with R.code
######################+
# launch set-up scripts #####
input <- '00_execute_m6practice_intro_aux.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#DEBUG <- T
# read-in + basic editing of raw data: create base df ####
input <- 'm6practice_databasics_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
input <- 'm6practice_samplecreation_main_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
# figures ####
input <- "/c_program/m6practice_analysis_figures_ex3.R"
source(paste0(DO,input,sep=""), echo=FALSE, max=1000)
# figures ####
input <- 'm6practice_analysis_figures_ex3.R'
source(paste0(DO,input,sep=""), echo=FALSE, max=1000)
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- MAINNAME_check
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME)
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
df<-LOAD(dfinput=paste0(DFMAIN,"_ex3"),pattdir=A)
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- MAINNAME_check
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME)
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
df<-LOAD(dfinput=paste0(DFMAIN,"_ex3"),pattdir=A)
# MAIN PART ####
df<-LOAD(dfinput=paste0(DFMAIN,"_ex3"))
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME_check)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
df<-LOAD(dfinput=paste0(DFBASE,"_ex3"))
#restrict to non-missing rows
dim(df)
df <- df[complete.cases(df),]
dim(df)
#save
SAVE(dfx=df,namex=MAINNAME,pattdir=A)
# MAIN PART ####
df<-LOAD(dfinput=paste0(DFMAIN,"_ex3"))
df<-LOAD(dfinput=paste0(DFMAIN,"_ex1"),pattdir=A)
df<-LOAD(dfinput=paste0(DFMAIN,"_ex3"),pattdir=A)
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- MAINNAME_check
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME)
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
df<-LOAD(dfinput=paste0(DFMAIN,"_ex3"),pattdir=A)
# run regression equation
reg1<- lm(logwphy ~ urateb, data = df)
summary (reg1)
reg2 <- lm(logwphy ~ urateb + (urateb^2), data=df)
summary(reg2)
#export
stargazer(reg1,reg2,type="text")
install.packages("stargazer")
library(stargazer)
#############################################+
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
# main & subsample creation ####
input <- 'm6practice_samplecreation_main_ex3.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
# INTRO	script-specific ####
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- MAINNAME_check
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME)
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
df<-LOAD(dfinput=paste0(DFMAIN,"_ex3"),pattdir=A)
# run regression equation
reg1<- lm(logwphy ~ urateb, data = df)
summary (reg1)
reg2 <- lm(logwphy ~ urateb + (urateb^2), data=df)
summary(reg2)
#export
stargazer(reg1,reg2,type="text")
################################################################################################################+
# INTRO	script-specific ####
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- MAINNAME_check
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME)
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
df<-LOAD(dfinput=paste0(DFMAIN,"_ex3"),pattdir=A)
# run regression equation
reg1<- lm(logwphy ~ urateb, data = df)
summary (reg1)
reg2 <- lm(logwphy ~ urateb + (urateb)^2, data=df)
summary(reg2)
#export
stargazer(reg1,reg2,type="text")
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
# regressions ####
input < 'm6practice_analysis_regression_ex3.R'
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- MAINNAME_check
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME)
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
df<-LOAD(dfinput=paste0(DFMAIN,"_ex3"),pattdir=A)
#plot and export
pdf(file=paste0(D,MAINNAME,"_scatter.pdf"))
plot(df$logwphy,df$urateb)
abline(lm(logwphy ~ urateb,data=df))
dev.off()

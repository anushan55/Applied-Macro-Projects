############################
# packages and libraries ####
install.packages("SciViews")
library("SciViews")
#install.packages("AER") #run only once
library(AER)
install.packages("dplyr")
library(dplyr)  # -------------------- clashes with plyr, thus assign  explitly in code, plyr:: ...
install.packages("haven")
library(haven)
install.packages("ggplot2")
library(ggplot2)
#install.packages("stargazer")
library(stargazer)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("SciViews")
library("SciViews")
install.packages("AER") #run only once
library(AER)
install.packages("dplyr")
library(dplyr)  # -------------------- clashes with plyr, thus assign  explitly in code, plyr:: ...
install.packages("haven")
library(haven)
install.packages("ggplot2")
library(ggplot2)
install.packages("stargazer")
library(stargazer)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(haven)
GoodBad_Control_simulated_Education_parents <- read_dta("E:/Documents/Applied Macro/Projects/projects/project_m6practice/a_microdata/GoodBad_Control (simulated) - Education parents.dta")
View(GoodBad_Control_simulated_Education_parents)
df <- read_dta("E:/Documents/Applied Macro/Projects/projects/project_m6practice/a_microdata/GoodBad_Control (simulated) - Education parents.dta")
df<-as.data.frame(df)
str(df)
install.packages("SciViews")
library("SciViews")
install.packages("AER") #run only once
library(AER)
install.packages("dplyr")
library(dplyr)  # -------------------- clashes with plyr, thus assign  explitly in code, plyr:: ...
install.packages("haven")
library(haven)
install.packages("ggplot2")
library(ggplot2)
install.packages("stargazer")
################################################################################################################+
# INTRO ####
#clear console
cat("\014")
#clear all globals in memory
rm(list = ls()) #needs to go before user-written functions (not libraries) are loaded
sink()
######################+
# non-automatable globals #####
#for master scriptname and extension #####
library(rstudioapi)
MAINNAME <- rstudioapi::getActiveDocumentContext()$path #returns path+name
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
HOME <- "E:/Documents/Applied Macro/Projects/projects/" #here: path to 'projects' dir
DO <- paste0(HOME,"/project_m6practice/c_program/") #here: path to folder with R.code
######################+
# launch set-up scripts #####
input <- '00_execute_m6practice_intro_aux.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
#DEBUG <- T
################################################################################################################+
# MAIN PART ####
#############################################+
# read-in + basic editing of raw data: create base df ####
input <- 'm6practice_databasics_ex6_Education parents.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
input <- 'm6practice_databasics_ex6_age.R'
source(paste0(DO,input,sep=""), echo=TRUE, max=1000)
# TARGET:
# INDATA:
# OUTDATA/ OUTPUT:
################################################################################################################+
# INTRO	script-specific ####
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME_check)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
# Import dataset
setwd(A)
df <- read_dta("GoodBad_Control (simulated) - Age.dta")
#create original row id
df$ADMIN_ID <- seq.int(nrow(df))
#save as.rda
SAVE(dfx=df,namex=MAINNAME,pattdir=A)
#
df<-LOAD(dfinput=paste0(DFBASE,"_ex6_age"),pattdir=A)
colnames(df)
View(df)
s1_reg1<- lm(income ~ edu, data = df)
s1_reg2<- lm(income ~ edu+edu_parents, data = df)
#
df<-LOAD(dfinput=paste0(DFBASE,"_ex6_age"),pattdir=A)
colnames(df)
# run regression equation - Scenario 2
s2_reg1<- lm(income ~ edu, data = df)
s2_reg2<- lm(income ~ edu+age, data = df)
stargazer(s2_reg1,s2_reg2,type="text")
#Load scenario 3
df<-LOAD(dfinput=paste0(DFBASE,"_ex6_WorkType Blue or White"),pattdir=A)
# TARGET:
# INDATA:
# OUTDATA/ OUTPUT:
################################################################################################################+
# INTRO	script-specific ####
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME_check)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
# Import dataset
setwd(A)
df <- read_dta("GoodBad_Control (simulated) - WorkType Blue or White.dta")
#create original row id
df$ADMIN_ID <- seq.int(nrow(df))
#save as.rda
SAVE(dfx=df)
###########################################################################+
# INTRO	script-specific ####
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME_check)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
# Import dataset
setwd(A)
df <- read_dta("GoodBad_Control (simulated) - WorkType Blue or White.dta")
#create original row id
df$ADMIN_ID <- seq.int(nrow(df))
#save as.rda
SAVE(dfx=df,namex=MAINNAME,pattdir=A)
#Load scenario 3
df<-LOAD(dfinput=paste0(DFBASE,"_ex6_WorkType Blue or White"),pattdir=A)
colnames(df)
colnames(df)<-(sub("m6practice_databasics_ex6_WorkType.Blue.or.White.edu", "edu",colnames(df)))
colnames(df)<-sub("m6practice_databasics_ex6_WorkType.Blue.or.White.work_type", "work_type",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_WorkType.Blue.or.White.u", "u",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_WorkType.Blue.or.White.income", "income",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_WorkType.Blue.or.White.ADMIN_ID", "ADMIN_ID",colnames(df))
colnames(df)
# run regression equation - Scenario 3
s3_reg1<- lm(income ~ edu, data = df)
s3_reg2<- lm(income ~ edu+work_type, data = df)
summary (s3_reg1)
summary(s3_reg2)
stargazer(s3_reg1,s3_reg2,type="text")
View(df)
# TARGET:
# INDATA:
# OUTDATA/ OUTPUT:
################################################################################################################+
# INTRO	script-specific ####
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME_check)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
# Import dataset
setwd(A)
df <- read_dta("GoodBad_Control (simulated) - Interest in Politics.dta")
#create original row id
df$ADMIN_ID <- seq.int(nrow(df))
#save as.rda
SAVE(dfx=df,namex=MAINNAME,pattdir=A)
#Load scenario 4
df<-LOAD(dfinput=paste0(DFBASE,"_ex6_Interest in Politics"), pattdir=A)
colnames(df)
View(df)
df<-LOAD(dfinput=paste0(DFBASE,"_ex6_Interest in Politics"), pattdir=A)
colnames(df)
colnames(df)<-sub("m6practice_databasics_ex6_Interest.in.Politics.edu", "edu", colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_Interest.in.Politics.ability_unobs" , "ability_unobs", colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_Interest.in.Politics.interest_politics", "interest_politics", colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_Interest.in.Politics.u", "u",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_Interest.in.Politics.income", "income",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_WorkType.Blue.or.White.ADMIN_ID", "ADMIN_ID",colnames(df))
colnames(df)
colnames(df)<-sub("m6practice_databasics_ex6_Interest.in.Politics.ADMIN_ID", "ADMIN_ID",colnames(df))
colnames(df)
# run regression equation - Scenario 4
s3_reg1<- lm(income ~ edu, data = df)
s3_reg2<- lm(income ~ edu+interest_politics, data = df)
summary (s4_reg1)
# run regression equation - Scenario 4
s4_reg1<- lm(income ~ edu, data = df)
s4_reg2<- lm(income ~ edu+interest_politics, data = df)
summary (s4_reg1)
summary(s4_reg2)
stargazer(s4_reg1,s4_reg2,type="text")
################################################################################################################+
# INTRO	script-specific ####
#clear gobal environment of all but uppercase objects (globals, myfunctions, scalars)
CLEARCOND()
#adapt scriptname/ rfilename and extension if NOT executed in batch mode
MAINNAME_check <- rstudioapi::getActiveDocumentContext()$path #returns path+name of script currently executed (no outsourcing to program possible)
if ( !grepl("00_execute",MAINNAME_check)) {
MAINNAME <- sub(".*/|^[^/]*$", "", MAINNAME_check)
MAINNAME <- substr(MAINNAME,1,nchar(MAINNAME)-2) #cut off .R
}
######################+
#release unused memory
gc()
################################################################################################################+
# MAIN PART ####
# Import dataset
setwd(A)
df <- read_dta("GoodBad_Control (simulated) - happiness schooling income.dta")
#create original row id
df$ADMIN_ID <- seq.int(nrow(df))
#save as.rda
SAVE(dfx=df,namex=MAINNAME,pattdir=A)
#Load scenario 5
df<-LOAD(dfinput=paste0(DFBASE,"_ex6_happiness schooling income"), pattdir=A)
colnames(df)
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income.schooling", "schooling",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income","income", colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_Interest.in.Politics.interest_politics", "interest_politics", colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income.u" ,"u",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income.happiness", "happiness",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income.ADMIN_ID", "ADMIN_ID",colnames(df))
colnames(df)
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income.schooling", "schooling",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income","income", colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income.u" ,"u",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income.happiness", "happiness",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income.ADMIN_ID", "ADMIN_ID",colnames(df))
colnames(df)
colnames(df)
#Load scenario 5
df<-LOAD(dfinput=paste0(DFBASE,"_ex6_happiness schooling income"), pattdir=A)
colnames(df)
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income.schooling", "schooling",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income","income", colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income.u" ,"u",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income.happiness", "happiness",colnames(df))
colnames(df)<-sub("m6practice_databasics_ex6_happiness.schooling.income.ADMIN_ID", "ADMIN_ID",colnames(df))
colnames(df)
# run regression equation - Scenario 5
s5_reg1<- lm(schooling~income.happiness, data = df)
s5_reg2<- lm(schooling~income.happiness+income.income, data = df)
summary (s5_reg1)
summary(s5_reg2)
stargazer(s5_reg1,s4_reg2,type="text")
stargazer(s5_reg1,s5_reg2,type="text")
# run regression equation - Scenario 5
s5_reg1<- lm(income.happiness~schooling, data = df)
s5_reg2<- lm(income.happiness~schooling+income.income, data = df)
summary (s5_reg1)
summary(s5_reg2)
stargazer(s5_reg1,s5_reg2,type="text")
s5_reg1,s5_reg2, type= "text)
stargazer(s1_reg1,s1_reg2,
s2_reg1,s2_reg2,
s3_reg1,s3_reg2,
s4_reg1,s4_reg2,
type= "text")
stargazer(s1_reg1,s1_reg2,
s2_reg1,s2_reg2,
s3_reg1,s3_reg2,
s4_reg1,s4_reg2, type= "text")
